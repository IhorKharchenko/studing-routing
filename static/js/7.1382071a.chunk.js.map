{"version":3,"file":"static/js/7.1382071a.chunk.js","mappings":"qMAAaA,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,0BACE,kBACEC,KAAK,OACLF,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOJ,MAAtB,KAIlB,E,oCC4BD,EAjCkB,WAAO,IAAD,EACtB,GAAkCK,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,GAC5CC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAeC,KAAKV,EACrB,GAAE,IACH,IAGMW,GAAmBC,EAAAA,EAAAA,UAAQ,WAC/B,OAAOb,EAAUc,QAAO,SAAAC,GAAQ,OAC9BA,EAASC,KAAKC,cAAcC,SAASb,EAAYY,cADnB,GAGjC,GAAE,CAACjB,EAAWK,IACf,OACE,4BACE,SAACZ,EAAD,CAAWC,MAAOW,EAAaV,SAVd,SAAAD,GACnBU,EAAgBV,EAAQ,CAAEoB,OAAQpB,GAAU,CAAC,EAC9C,IASIkB,EAAiBO,OAAS,IACzB,wBACGP,EAAiBQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIL,EAAP,EAAOA,KAAP,OACpB,yBACE,SAAC,KAAD,CAAMM,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMjB,GAAlC,SACGS,KAFIK,EADW,QAW/B,C","sources":["components/SearchBox.js","pages/Customers.js"],"sourcesContent":["export const SearchBox = ({ value, onChange }) => {\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </div>\n  );\n};\n","import { SearchBox } from 'components/SearchBox';\nimport { getCustomers } from 'fakeAPI';\nimport { useEffect, useMemo, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Customers = () => {\n  const [customers, setCustomers] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filterParam = searchParams.get('filter') ?? '';\n  const location = useLocation();\n  useEffect(() => {\n    getCustomers().then(setCustomers);\n  }, []);\n  const changeFilter = value => {\n    setSearchParams(value ? { filter: value } : {});\n  };\n  const visibleCustomers = useMemo(() => {\n    return customers.filter(customer =>\n      customer.name.toLowerCase().includes(filterParam.toLowerCase())\n    );\n  }, [customers, filterParam]);\n  return (\n    <div>\n      <SearchBox value={filterParam} onChange={changeFilter} />\n      {visibleCustomers.length > 0 && (\n        <ul>\n          {visibleCustomers.map(({ id, name }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\nexport default Customers;\n"],"names":["SearchBox","value","onChange","type","e","target","useState","customers","setCustomers","useSearchParams","searchParams","setSearchParams","filterParam","get","location","useLocation","useEffect","getCustomers","then","visibleCustomers","useMemo","filter","customer","name","toLowerCase","includes","length","map","id","to","state","from"],"sourceRoot":""}